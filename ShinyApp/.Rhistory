while(j != 1){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
j -= 1
}
}
if(j==1){
while(i !=1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
i -= 1
}
}
return(list(alignedA,alignedB,matchLine))
}
traceBackNW <- function(listMat){
## Pulls in the matrices
matchMat <- list[[1]]
gap1 <- list[[2]]
gap2 <- list[[3]]
## Creates empty vectors for aligned sequences
alignedA <- c()
alignedB <- c()
matchLine <- c()
# figures out the dimensions of the matrix
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
# Until it goes to the top.
while(i != 1){
while(j != 1){
# Figures out the which of the matrices produces the max
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
# chooseTrace has 1=match, 2=gap in sequence 1, 3=gap in sequence 2
if(chooseTrace == 1){
alignedA = c(seqA[i],alignedA)
alignedB = c(seqB[j],alignedB)
# Handles the case of the line between the two sequences
if(seqA[i]==seqB[j]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
}
else if(chooseTrace == 2){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
else if(chooseTrace == 3){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
}
## Deals with the remaining gaps once it hits the end of a sequence.
if(i==1){
while(j != 1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
if(j==1){
while(i !=1){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
}
return(list(alignedA,alignedB,matchLine))
}
inputTrace<- NW(seqA,seqB,-1,0,matrix)
inputTrace
traceBackNW(inputTrace)
traceBackNW(inputTrace)
traceBackNW <- function(listMat){
## Pulls in the matrices
matchMat <- listMat[[1]]
gap1 <- listMat[[2]]
gap2 <- listMat[[3]]
## Creates empty vectors for aligned sequences
alignedA <- c()
alignedB <- c()
matchLine <- c()
# figures out the dimensions of the matrix
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
# Until it goes to the top.
while(i != 1){
while(j != 1){
# Figures out the which of the matrices produces the max
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
# chooseTrace has 1=match, 2=gap in sequence 1, 3=gap in sequence 2
if(chooseTrace == 1){
alignedA = c(seqA[i],alignedA)
alignedB = c(seqB[j],alignedB)
# Handles the case of the line between the two sequences
if(seqA[i]==seqB[j]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
}
else if(chooseTrace == 2){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
else if(chooseTrace == 3){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
}
## Deals with the remaining gaps once it hits the end of a sequence.
if(i==1){
while(j != 1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
if(j==1){
while(i !=1){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
}
return(list(alignedA,alignedB,matchLine))
}
traceBackNW(inputTrace)
traceBackNW <- function(seqA,seqB,listMat){
## Pulls in the matrices
matchMat <- listMat[[1]]
gap1 <- listMat[[2]]
gap2 <- listMat[[3]]
## Creates empty vectors for aligned sequences
alignedA <- c()
alignedB <- c()
matchLine <- c()
# figures out the dimensions of the matrix
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
# Until it goes to the top.
while(i != 1){
while(j != 1){
# Figures out the which of the matrices produces the max
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
# chooseTrace has 1=match, 2=gap in sequence 1, 3=gap in sequence 2
if(chooseTrace == 1){
alignedA = c(seqA[i],alignedA)
alignedB = c(seqB[j],alignedB)
# Handles the case of the line between the two sequences
if(seqA[i]==seqB[j]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
}
else if(chooseTrace == 2){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
else if(chooseTrace == 3){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
}
## Deals with the remaining gaps once it hits the end of a sequence.
if(i==1){
while(j != 1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
if(j==1){
while(i !=1){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
}
return(list(alignedA,alignedB,matchLine))
}
seqA
seqB
traceBackNW(seqA,seqB,inputTrace)
seqA[i]==seqB[j]
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
i
j
seqA[i]==seqB[j]
seqB[j]
seqA
traceBackNW <- function(seqA,seqB,listMat){
# Splits the sequences
seqA <- strsplit(toupper(seqA),c())[[1]]
seqB <- strsplit(toupper(seqB),c())[[1]]
## Pulls in the matrices
matchMat <- listMat[[1]]
gap1 <- listMat[[2]]
gap2 <- listMat[[3]]
## Creates empty vectors for aligned sequences
alignedA <- c()
alignedB <- c()
matchLine <- c()
# figures out the dimensions of the matrix
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
# Until it goes to the top.
while(i != 1){
while(j != 1){
# Figures out the which of the matrices produces the max
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
# chooseTrace has 1=match, 2=gap in sequence 1, 3=gap in sequence 2
if(chooseTrace == 1){
alignedA = c(seqA[i],alignedA)
alignedB = c(seqB[j],alignedB)
# Handles the case of the line between the two sequences
if(seqA[i]==seqB[j]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
}
else if(chooseTrace == 2){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
else if(chooseTrace == 3){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
}
## Deals with the remaining gaps once it hits the end of a sequence.
if(i==1){
while(j != 1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
if(j==1){
while(i !=1){
alignedA = c(seqA[i],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
}
return(list(alignedA,alignedB,matchLine))
}
seqB[j]
traceBackNW(seqA,seqB,inputTrace)
seqA
seqB
seqA <- strsplit(toupper(seqA),c())[[1]]
seqB <- strsplit(toupper(seqB),c())[[1]]
seqA
seqB
seqB[j]
traceBackNW <- function(seqA,seqB,listMat){
# Splits the sequences
seqA <- strsplit(toupper(seqA),c())[[1]]
seqB <- strsplit(toupper(seqB),c())[[1]]
## Pulls in the matrices
matchMat <- listMat[[1]]
gap1 <- listMat[[2]]
gap2 <- listMat[[3]]
## Creates empty vectors for aligned sequences
alignedA <- c()
alignedB <- c()
matchLine <- c()
# figures out the dimensions of the matrix
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
# Until it goes to the top.
while(i != 1){
while(j != 1){
# Figures out the which of the matrices produces the max
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
# chooseTrace has 1=match, 2=gap in sequence 1, 3=gap in sequence 2
if(chooseTrace == 1){
alignedA = c(seqA[i-1],alignedA)
alignedB = c(seqB[j-1],alignedB)
# Handles the case of the line between the two sequences
if(seqA[i]==seqB[j]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
}
else if(chooseTrace == 2){
alignedA = c(seqA[i-1],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
else if(chooseTrace == 3){
alignedA = c("-",alignedA)
alignedB = c(seqB[j-1],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
}
## Deals with the remaining gaps once it hits the end of a sequence.
if(i==1){
while(j != 1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j-1],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
if(j==1){
while(i !=1){
alignedA = c(seqA[i-1],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
}
return(list(alignedA,alignedB,matchLine))
}
seqA <- AGC
seqA <- "AGC"
seqB <- "GCA"
traceBackNW(seqA,seqB,inputTrace)
traceBackNW <- function(seqA,seqB,listMat){
# Splits the sequences
seqA <- strsplit(toupper(seqA),c())[[1]]
seqB <- strsplit(toupper(seqB),c())[[1]]
## Pulls in the matrices
matchMat <- listMat[[1]]
gap1 <- listMat[[2]]
gap2 <- listMat[[3]]
## Creates empty vectors for aligned sequences
alignedA <- c()
alignedB <- c()
matchLine <- c()
# figures out the dimensions of the matrix
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
# Until it goes to the top.
while(i != 1){
while(j != 1){
# Figures out the which of the matrices produces the max
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
# chooseTrace has 1=match, 2=gap in sequence 1, 3=gap in sequence 2
if(chooseTrace == 1){
alignedA = c(seqA[i-1],alignedA)
alignedB = c(seqB[j-1],alignedB)
# Handles the case of the line between the two sequences
if(seqA[i-1]==seqB[j-1]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
}
else if(chooseTrace == 2){
alignedA = c(seqA[i-1],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
else if(chooseTrace == 3){
alignedA = c("-",alignedA)
alignedB = c(seqB[j-1],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
}
## Deals with the remaining gaps once it hits the end of a sequence.
if(i==1){
while(j != 1){
alignedA = c("-",alignedA)
alignedB = c(seqB[j-1],alignedB)
matchLine = c(" ",matchLine)
j = j - 1
}
}
if(j==1){
while(i !=1){
alignedA = c(seqA[i-1],alignedA)
alignedB = c("-",alignedB)
matchLine = c(" ",matchLine)
i = i - 1
}
}
return(list(alignedA,alignedB,matchLine))
}
traceBackNW(seqA,seqB,inputTrace)
seqA <- "GGCAC"
seqB <- "GGAAAAAAACAC"
NW(seqA,seqB,-1,0,matrix)
inputTrace <-NW(seqA,seqB,-1,0,matrix)
traceBackNW(seqA,seqB,inputTrace)
seqB[j-1]
j
i
seqB
traceBackNW(seqA,seqB,inputTrace)
seqA <- strsplit(toupper(seqA),c())[[1]]
seqB <- strsplit(toupper(seqB),c())[[1]]
listMat <- inputTrace
matchMat <- listMat[[1]]
gap1 <- listMat[[2]]
gap2 <- listMat[[3]]
alignedA <- c()
alignedB <- c()
matchLine <- c()
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
i
j
maxVal <- max(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
boolTrace <- maxVal == list(matchMat[i,][j],gap1[i,][j],gap2[i,][j])
chooseTrace <- match(TRUE,boolTrace)
maxVal
chooseTrace
boolTrace
alignedA = c(seqA[i-1],alignedA)
alignedB = c(seqB[j-1],alignedB)
alignedA
alignedB
seqB[j-1]
seqA[i-1]
if(seqA[i-1]==seqB[j-1]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
i = i - 1
j = j - 1
if(seqA[i-1]==seqB[j-1]){
matchLine = c("|",matchLine)
}
else{
matchLine = c(" ",matchLine)
}
alignedA <- c()
alignedB <- c()
matchLine <- c()
i
j
i <- dim(matchMat)[1]
j <- dim(matchMat)[2]
i
j
matchMat
i
